1.2.6：
   	解决了前几个版本一直存在的文件筛选器点击刷新按钮后，列出的备份文件列表残留在其他页面的情况，添加了对特定类型的文件的支持

1.2.7更新内容：
   	使用正规线程模块替代了原本的定时器函数，尝试规避闪退问题，暂未成功     经测试，似乎是本机（开发时使用的或者Shell的问题导致闪退）
	细节描述：在python内使用shell来运行的时候经常会闪退，但在另外一台电脑上使用py.exe打开时未出现问题
	二次排查：在本机运行时使用pyinstaller打包为exe文件后运行，稳定性良好，暂未出现闪退问题
	bug报告：在打开条件筛选，选中其中一个时，右侧输入框出现禁用与可用的频繁跳动现象，猜测问题位于StateDetect函数内，由于检测机制不属于同一		条件语句下造成的bug，增加了对文件大小的统计
1.2.8更新内容：
  	对文件大小标签进行修改，改为文件备份总量；猜测闪退问题存在与AutoClean函数中，删除后进行测试，闪退问题仍然存在
	修复了在打开条件筛选，选中其中一个时，右侧输入框出现禁用与可用的频繁跳动现象的bug
	对于闪退问题的可能性猜测：可能位于状态监视器页面，准备进行可能性统计
	在三个为一组的统计下，状态监视器页面首先出现闪退，进行进一步测试，提高状态监视器部分数据的刷新频率
	验证成功，在监视器状态页面的窗口全部出现了闪退现象，闪退问题成功定位至KeepUpDatingData函数内
	采用将静态文本空间替换成输入文本框，已确认解决闪退问题的方案
1.3.0更新内容：
	修补了ActiveScan函数中因为扫描文件数过多可能出现的FileNotFound问题
	发现问题，经过溯源，发现自1.2.8起就存在该问题，准备在下一版本当中以由回滚1.2.7，重置的方式更新
	1.2.7类似问题依旧存在，回滚至1.2.6，问题不存在，猜测是检测速度过快，进行降低检测时间间隔操作
	经修改，问题消失 StateDetect中出现了RuntimeError: wrapped C/C++ object of type Choice has been deleted问题，已解决
	增加了正常运行时间的显示；将备份文件总量和备份文件数量替换为本次备份总量/数量
	修复了字节数为两位数时显示异常（如22.字节）的问题新增了GetDirSize函数，用于得到某文件夹下文件总大小
	错误报告：  File "E:\桌面文件夹\文件监视项目开发组\适配开发\W+ Beta1.3.0.py", line 296, in KeepUpDatingData
    		self.s5.SetValue(self.ProcessTime(int(t4 - self.t3)))
		TypeError: unsupported operand type(s) for -: 'float' and 'str'待解决...
	增加了所用容量大小的显示，增加了打开备份文件夹的关联
1.3.1更新内容：
	修复了    self.s5.SetValue(self.ProcessTime(int(t4 - self.t3))) TypeError: unsupported operand type(s) for -: 'float' and 'str'的错误，经检查，错误原	因是定义的变量名有冲突，需要替换的变量分别位于35行，739行，323行,321行，将self.t3(用于计量时间)替换为self.time3
	添加了对文件大小的筛选，增加了对备份区文件占用的显示以及高占用警告
1.3.2更新内容：
	新增大小排序函数，明确设计思路，在文件备份前和显示的部分使用分开的不同函数（暂未完成）
	增加了文件类型数量显示
	将所有except后的动作添加一步：将报出的错误添加进错误记录列表
	在状态监视器左上角添加消息栏，使用多行文本显示框，用来显示监视器的内部动作
	将错误报告栏拓宽为消息报告栏；把多线程加速更换为内存定时清理
1.4.0更新内容：
	梳理剩余待更新项目：文件筛选器的类型和触发类型（删去排序）；系统设置中备份优先级删去时间筛选  对系统设置中高级设置一栏进行大幅更改
	删除self.checkbox6，含有self.checkbox6的分别位于第1474， 1407， 1346， 1308， 1234， 1189，1063， 与其关联的还有self.EntryText10
	分别位于1437， 1370， 1328， 1290，1237， 1235， 1199， 1103， 1081，与之枪管的还有1438， 1371，
	Bug改完太多，不删了。。。  增加硬盘备份区大小必须设置的限制；在监视器状态页面添加内存使用大小查看；更改内存缓冲加速为限制内存使用
	将self.EntryText10默认状态设置为False；将内存定时清理改为内存自动定量清理
	将文件筛选器的触发类型标签左移，增加美观度，同步移动关联项self.listbox03
	新增了AutoMemoryUsageControl函数，与自动清理内存相关联，添加了无后缀统计失败的错误反馈，添加了错误反馈的后继动作
	发现了AutoMemoryUsageControl中存在无中断的死循环导致程序卡顿，已通过添加中断解决
	无后缀提示添加提示状态监测，防止多次提示的情况出现 对内存使用设置进行测试
	查找所有存在占用大量内存可能性的变量，分别位于第31 39 67 68 69 70 71，经过调整的内存清理效果良好；增加了内存设置过小会导致内存限制	只能		略高于某一数值的提示，增加了内存自动定量清理不能与限制内存使用同时开启的限制，
	增加备份区将满动作必选的限制，增加删除最大最小文件函数，设计思路：调用_listdir函数获取备份区所有文件名
	调用文件大小排序函数进行排序，删除  增加self.OverFlowState = self.listbox6.GetSelection()状态
	完成DelFilesByRules的增加及可用性检验；删除了备份区占用高的弹窗提示，原因是该弹窗若未及时消除会成为程序中断事件
1.4.1更新内容：
	增加了RecordLastMonitorSettings和LoadMonitorSettings两个函数，用于对MonitorSettings页面的筛选值记忆，函数通过验收，效果达到
	增加ScreenTheList函数用于在文件监视器列表的条件筛选显示；对系统设置界面的监测需要保存进行更改
	使按下开始监测的同时保存当前设置；在ScreenTheList中添加了第二筛选
	MonitorSettings页面通过全部验收，第二页设计全部结束




